
BDMS (DBMS: Database Management System)
혹은
데이터베이스 관리 시스템

대표적인 BD의 종류는

MYSQL
Oracle
MariaDB
MongoDB

등이 있고
가장 기능이 많고 규모가 큰 DB는 Oracle이라고 한다.

Database

table
     
record, recordset, field, column

FTP 

char 고정형 텍스트 static
값의 길이가 같을때 

varchar flexiblel
값의 길이가 유동적일때 사용 ( 게시판 제목 등 )

var + char

variable

gui 구이
cui

amp
apache (web server)
my-sql (dbms)
mariadb

php (server side language)

DCL 권한 grant revoke 
DDL create alter drop 
DML insert updata delete select

	new      edit       remove   search
DDL	create   alter      drop       show
DML	insert    update   delete     select

** 콘솔 실행 **

window key + R (실행)
cmd 입력 후 엔터

dir 폴더
dc 폴더 더블클릭 change delectory

** DB 접속 **

MYSQL -h 호스트(DB위치) -u 사용자(아이디) -p비밀번호
mysql -u root

adminstrator
admin 
root 

** DB 목록 확인 **
문장의 끝에는 ; 필수
show databases;

** DB 선택 **
use DB명;

** table 목록 확인 **
show tables;

** 테이블 구조 확인 **
desc[describe] 테이블명;

** 사용자 확인 **
select host, user, password from mysql.user;
		                  DBName.

** 사용자 추가 **
create user 사용자명(아이디)@호스트명 identified by '비밀번호';


** 계정 정보(권한) 확인 **
show grants for 사용자명@호스트명


** mysql 종료 **

exit; 또는 quit;

** root로 접속 **
mysql -u root;

cd 열기

** DB 목록 확인**
SHOW DATABASES;
권한이 없어서 일부DB만 보여짐

** DB 생성:권한 확인 **
create database DB명;
create database notice;


** 사용자 삭제 **
drop user

**데이터 베이스 생성**
create [객체]        [객체명];
create database    front;

** 데이터베이스 목록 확인 **
show databases;

** 데이터베이스 삭제 **
drop database [DB명];
drop database front;

** 데이터베이스 선택 **
use [DB명];
use front;

** 테이블 목록 확인 **
show tables;

** 테이블 생성 **
create table [테이블명] (
 필드명 데이터타입(길이) 제약,
 필드명 데이터타입(길이) 제약,
 필드명 데이터타입(길이) 제약,
 추가 제약 (기본키 설정, 문자셋, 외래키 
)

create table members (
idx int auto_increment primary key,
u_name varchar(20) not null,
u_id varchar(20) not null
);

primary key
https://linuxism.ustd.ip.or.kr/503

** 테이블 확인 **

desc [테이블명]
desc members;

** 테이블 검색 **
select * from [테이블명];
select * from members;

** 데이터 입력 **
insert into [테이블명] values('값1','값2',,,)
insert into members values(1, '관리자', 'admin', '1234');
insert into members(u_name,u_id,pwd) values('홍길동','hong','1111');


** 과제 **

1. SQL 명령어 (query) 종류 및 예시문 1개 이상
"01_쿼리문_본인이름.hwp"

2. MY-SQL 자료형 정리
"02_mysql 자료형_본인이름.hwp"

3. MY-SQL 제약 종류 정리
"03_mysql 제약 종류_본인이름.hwp"

4. "221025_본인이름" 폴더에 파일 모두 포함하여 압축 후 제출


https://chragu.com/entry/MySQL-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A0%9C%EC%95%BD-%EC%A1%B0%EA%B1%B4-%EC%A0%95%EB%A6%AC-CONSTRAINT-%EC%84%A4%EC%A0%95



** xmapp 실행 **
C:\xampp > xampp-control.exe 실행 > MySQL 항목 "start" 클릭

** 콘솔 실행 **
window key + R (실행)
cmd 입력 후 엔터

** 경로 이동 **
콘솔에 
cd c:\xampp\mysql\bin

** DB 접속 **
mysql -h 호스트(DB위치) -u 사용자(아이디) -p비밀번호
mysql -u root (; <--- 생략 )



여기서부턴 ; 사용 
** DB 목록 확인 **
show databases;


** DB 선택 **
USE [DB명];

** sql 기본 쿼리 **

** 실행문 **
1. DCL : 권한, 보안
2. DDL : 데이터베이스, 테이블      create / alter / drop / show
3. DML : 데이터 처치	      insert / update / delete / select

** create 생성 **
ex) create database [DB명]; 
    create database exam;
    create table [테이블명] (
    필드명 데이터형식 제약,
    필드명 데이터형식 제약,
    필드명 데이터형식 제약,
)

create table notice( idx int auto_increment primary key,
n_title varchar(100) not null,
n_content varchar(255) not null,
n_writer varchar(20)
);


** Table 목록 확인 **
show tables;

** Table 구조 확인 **
desc [테이블명];
desc notice;

** 데이터 검색 **
elect * from members;

* table 삭제 *

drop table notice

** 데이터 검색 **
select * from members;

** alter : 수정 **
1. 데이터베이스, 테이블 수정 ( add, change, drop, modify, rename )
alter table [테이블명] add 필드명 타입 제약 after [필드명] '

2. 데이터베이스 수정
alter database [db명] 수정할 내용~
alter database [db명] character set=문자집합이름;
alter database [db명] collate=콜레이션이름;

alter database front character set='utf8'
			       그냥 붙여쓰면 된다.

alter database front collate=utf8_general_ci;

설정 변경후 재작성

insert into members(u_name, u_id, pwd) values('이영희', 'yhlee', '2222'); 

테이블 수정

3. alter table [테이블명] add [필드명 데이터타입];
   alter table [테이블명] drop [필드명];
   alter table [테이블명] modify column [필드명 데이터타입];
 
  alter table notice add n_date datetime;
  alter table notice drop n_date; 데이터 타입 삭제하기
  alter table notice modify column n_content text; 데이터 타입 변경하기
  
  desc notice 바뀐거 확인하기

** drop: 삭제 **



테이블 설계서 만들기

** 과제 **
1. 본인 프로젝트에 사용할 DB 테이블 설계서
2. 각 테이블 쿼리 작성
- "테이블 설계서_본인이름.hwp"


게시판 : board

항목 | 열이름 | 데이터타입(길이) | 제약

글번호 | idx | int | PK, AI
제목 | title | varchar(100) | NN
내용 | content | text | NN
작성자 | author | varchar(20) | NN
작성일자 | wr_date | date | NN
조회수 | view_count | int | default 0 

 ex) drop database [DB명];
      drop table [테이블명];
     




** DB에 문자셋 설정하여 생성 **

create database [DB명]
default character set [문자셋]
default collate [콜레이트 이름];


create database front
default character set utf8
default collate utf8_general_ci;

use front;

* 테이블 생성 : members *
create table members( idx int auto_increment primary key,
u_name varchar(20) not null,
u_id varchar(20) not null,
pwd varchar(20) not null
);

* 데이터 입력(한글 데이터 포함) *
insert into members values(1,'관리자','admin','1234');
insert into members(u_name,u_id,pwd) values('홍길동','hong','1111');

* 데이터 확인 (문자셋) *
select * from members;

** 데이터베이스 선택 **
use [DB명];
use front;

** 테이블 목록 확인 **
show tables;


* 숫자 타입 *
MySQL은 SQL 표준에서 지원하는 모든 숫자 타입 제공

1. 정수 타입 : TINYINT, SMALLINT
2. 고정 소수점 타입 : DECIMAL
3. 부동 소수점 타입 : FLOAT , DOUBLE
4. 비트값 타입 : BIT(0,1)

* 문자열 타입 *
1. CHAR(길이값) : 고정 길이 문자열
2. VARCHAR(길이값) : 가변 길이 문자열
3. BINARY(길이값)
4. VARBINARY(길이값)
5. BLOB
6. TEXT : 길이값 없음, 대소문자 구분
7. ENUM: 미리 지정한 집합 안의 데이터 중에 하나만 저장
8. SET: 미리 지정한 집합 안의 데이터 중에 여러개 동시 저장

*날짜, 시간*
1. DATE
- 날짜만 저장
- 기본형식 : 'YYYY-MM-DD'
2. DATETIME
- 날짜 & 시간
- 기본 형식 : 'YYYY-MM-DD HH:MM:SS'
3. DATE, DATETIME
- 입력받은 데이터가 유효한 날짜와 시간이 아니면 0을 저장
4. TIME
- 시간 저장
- 기본 형식 : 'HH-MM:SS'

5. YEAR
- 연도 저장
- YEAR(2) : 2자리 연도
- YEAR(4) : 4자리 연도
- 문자열 '0' 또는 '00' : 2000년


** 제약 (규칙) **
* 테이블 생성 *
create table 테이블이름(
 필드명 데이터형식 제약,
필드명 데이터형식 제약,
필드명 데이터형식 제약
);

* 제약 *
1. not null : 빈 값 허용 안함
2. default : 기본값 적용
3. unique : 중복된 값 허용 안함
4. check : 지정된 값만 허용
5. auto_increment : 자동 증가
6. primary key : 기본 키 설정
7. foreign key : 참조 키 설정


** DML 기본 쿼리 **

* 테이블 설계 *
============
|게시판 : board   |
============
-------------------------------------------------
항목 | 열이름 | 데이터타입(길이) | 제약
-------------------------------------------------
일련번호    | idx         | int              | NN
이름         | u_name   | varchar(20)    | NN
아이디      | u_id        | varchar(20)    | NN
비밀번호   | pwd        | varchar(20)    | NN
전화번호   | phone_no | varchar(15)    | NN
이메일     | email       | varchar(50)    | NN
생년월일  | birth        | date            | default 0 
성별       | gender     | char(1)          | default 0 
주소       | addr        | varchar(100)    | default 0 

* 테이블 생성*
create table new_members (
idx int auto_increment primary key,
u_name varchar(20) not null,
u_id varchar(20) not null,
pwd varchar(20) not null,
phone_no varchar(15),
email varchar(50),
birth date,
gender char(1),
addr varchar(100)
);


작성된 테이블 보기
select * from new_members; 

* insert : 데이터 입력*

1. 모든 필드에 데이터 입력
insert into [테이블명] value('값','값', ,,,,);
-- 모든 필드에 값을 입력하는 경우 테이블명 옆에 필드명 생략
insert into new_members values(1,'관리자','admin','1234','01011112222','admin@abc.com','2001-10-25','남','서울시 강남구 역삼동');

insert into new_members(u_name,u_id,pwd,phone_no,email, birth,gender,addr) values('김정우','Zungwoo','1277','01012712712','woo127@naver.com','1998-02-19','남','경기도 군포시 산본동');

insert into new_members(u_name,u_id,pwd,phone_no,e
mail, gender, birth, addr) values('김태연', 'taeyeon', 'ty1234', '01012340147', 'taeyeon01@naver.com', '1989-03-09', '여', '전라북도 전주시 평화동');



2. 일부 필드에 데이터 입력
insert into [테이블명](필드명, 필드명, ....) value ( '값1',  '값2', .... '값N' );
필드명 개수와 값의 개수가 반드시 일치해야 함
insert into new_members(u_name,u_id,pwd) values('홍길동','hong','1111');

값 지우기
DELETE FROM new_members WHERE idx = 2;

값 수정
UPDATE new_members SET u_name = '김장우' WHERE idx = 2;

insert into new_members values(1,'관리자','admin','1234','01011112222','admin@abc.com','2001-10-25','남','서울시 강남구 역삼동');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('김정우', 'Zungwoo', '1277', '01012712712', 'woo127@naver.com', '1998-02-19', '남', '경기도 군포시 산본동');
insert into new_members(u_name,u_id,pwd) values('홍길동','hong','1111');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('김태연', 'taeyeon', 'ty1234', '01012340147', 'taeyeon01@naver.com', '1989-03-09', '여', '전라북도 전주시 평화동');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('리누스', 'Linux', '1q2w3e', '01025559999', 'linux@github.com', '1971-08-25', '남', '부산광역시 해운대구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('박보영', 'parkbo0123', 'park6789!', '01056567878', 'parkbo0123@naver.com', '1986-05-05', '여', '경기 성남시 분당구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('박주원', 'joowon', '5678', '01062515564', 'peter@i-on.net', '1991-12-06', '남', '세종시');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('예지', 'dbekcks', '1026', '01012345678', 'dbekcks@naver.com', '2000-05-26', '여', '서울특별시/성동구/성수동');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('이유리', 'glasslee', '7253', '01022357709', 'glass22@naver.com', '1996-07-14', '여', '서울특별시 성동구 서울숲2길 17-17 (성수동1가)');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('이지은', 'iuiu', '5252', '01012341234', 'iiuu@naver.com', '1993-05-16', '여', '경기도 광주군 광주읍 송정리');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('공원식', 'arrrrr', 'wwt2d2', '01067969679', 'arrrrr@naver.com', '1994-10-14', '남', '서울시 강남구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('김길동', 'kildong1004', 'kildong1004!', '01056567979', 'kildong1004@gmail.com', '1961-01-03', '남', '서울시 서대문구 서대문로 1가 1층 파란지붕집');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('기성용', 'kiki6', '1234', '01012341234', 'ki6@naver.com', '1990-06-06', '남', '서울시 강남구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('anomalie', 'anomalie1', '1234', '01056785678', 'anomalie@google.co.kr', '1993-10-24', '남', '서울특별시 마포구 연남동');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('바나나킥', 'banana', '5662', '01057023342', 'banana@naver.com', '1995-04-20', '여', '성남시 분당구 백현동');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('황민현', 'optimushwang', '0809', '01088889999', 'optimushwang@gmail.com', '1995-08-09', '남', '부산광역시 수영구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('김강남', 'gangnam', 'gangnam123', '01076546543', 'gangnam@naver.com', '1999-09-09', '남', '서울특별시 강남구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('김범준', 'abcabc', '123123', '01012345678', 'abc123@gmail.com', '2022-10-25', '남', '서울시 강남구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('김연아', 'yunakim', '221022', '01020140221', 'yunakim@gmail.com', '1990-09-05', '여', '서울시 용산구');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('둘리', 'dool2', 'd2d2!@', '025727896', 'dool2@gmail.com', '1983-04-25', '남', '부천시 원미구 상1동 412-3번지 둘리의 거리');
insert into new_members(u_name, u_id, pwd, phone_no, email, birth, gender, addr) values('이종성', 'ljs111', '1234', '01012345678', 'abc@def.com', '1234-12-12', '남', '서울 강남구 강남대로 428 만이빌딩 5층');

** select: 데이터 검색 **
1. 단일 필드 검색
select [필드명] from [테이블명];
select u_name from new_members;

2. 여러 필드 검색
select [필드명],[테이블명], ,,,, from [테이블명];
select u_name,u_id from new_members;

3. 모든 필드 검색
select *(all) from [테이블명];
select * from new_members;

4. 전체 행의 개수 출력
select count(*) from [테이블명];
select count(*) from new_members;

5. 필드명 변경 : 출력시에만 변경
select [필드명] as [보여질 필드명] frome [테이블명];
select u_name as '이름' from new_members;
select count(*) as '전체 데이터' from new_members;

** where : 조건절 **
1. 특정 필드에서 특정한 값을 가진 전체 데이터 검색
select * from [테이블명] where [필드명=값];
select * from new_members where idx=22;

2. 특정 필드에서 특정한 값을 가진 일부 데이터 검색
select * [필드명], [필드명] ,,,from [테이블명] where [필드명=값];
select idx,u_name,u_id from new_members where idx=22;

3. 수정, 삭제시에도 사용
select * from new_menbers;

4. 전체 행의 개수 출력
select count(*) from [테이블명];
select count(*) from new_members;

5. 중복값 제외 검색
select distinct [필드명] from [테이블명];
select distinct gender from new_members;

6. 필드명(별칭) 변경 : 출력시에만 변경
select [필드명] as [보여질 필드명] from [테이블명];
select u_name as '이름' from new_members;
select count(*) as '전체 데이터' from new_members;

** 실습 **
1. 남 또는 여만 선택
select * from new_members where idx=22;

select * from new_members where gender = '남';
select * from new_members where gender = '여';
select u_name,gender from new_members where gender = '여';

2. 서울 지역만 선택
select u_name, addr from new_members where addr='서울'; (X)

** 연산자 **

1. +,-,*,/
2. &&, ||
3. not
4. =, !=, >, >, =<, =>
5. in: 비연속 데이터 검색

select [필드명] from [테이블명] where [필드명] in (값,값,값, ,,,);
select idx, u_name from new_members where idx in (22,24,26);

select idx, u_name from new_members where idx in (22,24,26);

6. between A and B : 범위 검색
select [필드명] from [테이블명] where [필드명] between A and B;
select idx, u_name from new_members where idx between 22 and 30;
select idx, u_name, birth from new_members where birth between '1990-01-01' and '1995-12-31';

7. like, % : 문자열 검색
select [필드명] from [테이블명] where [필드명] like '문자열' 해당되는거만 존재하면
select [필드명] from [테이블명] where [필드명] like '문자열%' 시작하면
select [필드명] from [테이블명] where [필드명] like '%문자열' 끝나면
select [필드명] from [테이블명] where [필드명] like '%문자열%' 해당하면

select u_name, addr from new_members where addr like '%서울%';
select u_name, addr from new_members where addr like '%강남%';

select u_name, addr from new_members where addr not like '%강남%'; 강남 제외

** order by : 정렬 **
1. asc : 오름차순(기본값)
2. desc : 내림차순

select [필드명] from [테이블명] order by [필드명 정렬방법]
select [필드명] from [테이블명] order by [필드명 정렬방법], [필드명 정렬방법]
select [필드명] from [테이블명] where절 order by [필드명 정렬방법]

select idx, u_name from new_members where idx between 22 and 30 order by idx desc;

** UPDATE : 데이터 수정 **
1. 단일 필드 수정
update [테이블명] set [수정할 필드 = 수정할 값];
update new_members set addr='서울';

2. 여러 필드 수정
update [테이블명] set [수정할 필드=수정할 값], [수정할 필드=수정할 값] ,,,;
update new_members set u_id='hong',pwd='1234';

3. 특정 데이터 수정
update [테이블명] set [수정할 필드=수정할 값] where [필드명=값];
update new_members set addr='경기' where idx=22;

** delete : 데이터 삭제 **
1. 모든 행 삭제
delete from [테이블명];
delete from new_members;

2. 특정 행 삭제
delete from [테이블명] where [필드명=값];
delete from new_members where idx=22;

https://velog.io/@yunso/%ED%9A%8C%EC%9B%90%EA%B0%80%EC%9E%85-UI
